import reactStringReplace from 'react-string-replace';
import Link from 'next/link';

const patternMentions = /\B@[a-z0-9_.⍙-]+/gi;
const patternUrl =
  /(https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|www\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\.[^\s]{2,}|https?:\/\/(?:www\.|(?!www))[a-zA-Z0-9]+\.[^\s]{2,}|www\.[a-zA-Z0-9]+\.[^\s]{2,})/g;

export const orbisParseMarkdown = (
  content: any,
  characterLimit?: number | undefined
) => {
  if (!content || !content.body) return;

  let body = content.body;

  if (characterLimit) {
    body = content.body?.substring(0, characterLimit);
  }

  /** Replace all <br> generated by the postbox to \n to handle line breaks */
  body = reactStringReplace(body, '<br>', (match, i) => <br key={match + i} />);

  body = reactStringReplace(body, '\n', (match, i) => <br key={match + i} />);

  /** Replace URLs */
  body = reactStringReplace(body, patternUrl, (match, i) => (
    <a key={match + i} href={match} target="_blank">
      {match}
    </a>
  ));

  /** Identify and replace mentions */

  /** Get mentions in post metadata */
  let mentions = content.mentions;

  /** Retrieve mentions in the body */
  let mentionsInBody = content.body.toString().match(patternMentions);

  /** Compare both and replace in body */
  if (mentionsInBody && mentions && Array.isArray(mentions)) {
    mentionsInBody.forEach(_m => {
      /** Find mention with the same name */
      let mention = mentions.find(obj => obj.username === _m);

      if (mention !== undefined) {
        body = reactStringReplace(body, _m, (match, i) =>
          mention.did ? (
            <Link href={'/' + mention.did} key={match + i}>
              {mention.username}
            </Link>
          ) : (
            <span className="post-body-link" key={i}>
              {mention.username}
            </span>
          )
        );
      }
    });
  }

  return body;
};
